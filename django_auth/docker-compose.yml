version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservice-network

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:${PORT}
    volumes:
      - .:/app
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - microservice-network

  auth-grpc:
    build: .
    command: sh -c "cd grpc && python generate_proto.py && python grpc_server.py"
    volumes:
      - .:/app
    ports:
      - "50051:50051"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - microservice-network

volumes:
  postgres_data:

networks:
  microservice-network:
    driver: bridge
